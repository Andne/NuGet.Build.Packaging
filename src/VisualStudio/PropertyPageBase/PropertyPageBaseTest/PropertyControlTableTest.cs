// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using PropertyPageBase;
namespace PropertyPageBaseTest
{
    [TestClass()]
    public class PropertyControlTableTest
    {
        string expectedControlName = "ControlName";
        string expectedPropertyName = "PropertyName";

        [TestMethod]
        public void AddTest()
        {
            PropertyControlTable testTable = new PropertyControlTable();

            testTable.Add(expectedPropertyName, expectedControlName);
            Assert.AreEqual(expectedControlName, testTable.GetControlNameFromPropertyName(expectedPropertyName));
            Assert.AreEqual(expectedPropertyName, testTable.GetPropertyNameFromControlName(expectedControlName));
        }

        [TestMethod]
        public void GetControlNameForPropertyNameTest()
        {
            PropertyControlTable testTable = new PropertyControlTable();
            Assert.IsNull(testTable.GetControlNameFromPropertyName(expectedPropertyName));
            
            testTable.Add(expectedPropertyName, expectedControlName);
            Assert.AreEqual(expectedControlName, testTable.GetControlNameFromPropertyName(expectedPropertyName));

            testTable.Remove(expectedPropertyName, expectedControlName);
            Assert.IsNull(testTable.GetControlNameFromPropertyName(expectedPropertyName));
        }

        [TestMethod]
        public void GetPropertyNameForControlNameTest()
        {
            PropertyControlTable testTable = new PropertyControlTable();
            Assert.IsNull(testTable.GetPropertyNameFromControlName(expectedControlName));

            testTable.Add(expectedPropertyName, expectedControlName);
            Assert.AreEqual(expectedPropertyName, testTable.GetPropertyNameFromControlName(expectedControlName));

            testTable.Remove(expectedPropertyName, expectedControlName);
            Assert.IsNull(testTable.GetPropertyNameFromControlName(expectedControlName));
        }

        [TestMethod]
        public void RemoveTest()
        {
            PropertyControlTable testTable = new PropertyControlTable();

            testTable.Add(expectedPropertyName, expectedControlName);
            Assert.IsNotNull(testTable.GetPropertyNameFromControlName(expectedControlName));
            Assert.IsNotNull(testTable.GetControlNameFromPropertyName(expectedPropertyName));

            testTable.Remove(expectedPropertyName, expectedControlName);
            Assert.IsNull(testTable.GetPropertyNameFromControlName(expectedControlName));
            Assert.IsNull(testTable.GetControlNameFromPropertyName(expectedPropertyName));
        }

        [TestMethod]
        public void GetPropertyNamesTest()
        {
            PropertyControlTable testTable = new PropertyControlTable();
            string expectedPropertyName2 = "Property2";
            string expectedControlName2 = "Control2";

            testTable.Add(expectedPropertyName, expectedControlName);
            testTable.Add(expectedPropertyName2, expectedControlName2);

            List<string> propertyList = testTable.GetPropertyNames();

            Assert.AreEqual(2, propertyList.Count);
            Assert.IsTrue(propertyList.Contains(expectedPropertyName));
            Assert.IsTrue(propertyList.Contains(expectedPropertyName2));
        }

        [TestMethod]
        public void GetControlNamesTest()
        {
            PropertyControlTable testTable = new PropertyControlTable();
            string expectedPropertyName2 = "Property2";
            string expectedControlName2 = "Control2";

            testTable.Add(expectedPropertyName, expectedControlName);
            testTable.Add(expectedPropertyName2, expectedControlName2);

            List<string> controlNameList = testTable.GetControlNames();

            Assert.AreEqual(2, controlNameList.Count);
            Assert.IsTrue(controlNameList.Contains(expectedControlName));
            Assert.IsTrue(controlNameList.Contains(expectedControlName2));
        }

    }


}
